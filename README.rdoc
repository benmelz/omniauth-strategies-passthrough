= <tt>omniauth-strategies-passthrough</tt>

An OmniAuth strategy that passes request params straight through the middleware.

This strategy allows you to pass auth hash values directly to an auth endpoint and forwards them directly to your
callback(s). The end goal of this is to provide more flexibility when writing login helpers in development/test
environments while still utilizing your OmniAuth callback(s).

== Installation

Install the gem and add to the application's Gemfile by executing:

  bundle add omniauth-strategies-passthrough

If bundler is not being used to manage dependencies, install the gem by executing:

  gem install omniauth-strategies-passthrough

== Usage

Include the <tt>passthrough</tt> strategy in development/test environments as you would with any other OmniAuth
strategy. *NEVER* use it in a production environment.

Once included, any POST request to <tt>/auth/passthrough</tt> will pass through any <tt>uid</tt> and <tt>info</tt>
params to your omniauth callback.

  # request
  post '/auth/passthrough',
       params: { uid: 'my-uid', info: { email: 'my-email@example.com', first_name: 'My', last_name: 'Name' } }

  # callback
  request.env['omniauth.auth'].uid # => 'my-uid'
  request.env['omniauth.auth'].info.email # => 'my-email@example.com'
  request.env['omniauth.auth'].info.first_name # => 'My'
  request.env['omniauth.auth'].info.last_name # => 'Name'

== Development

* Run <tt>bin/setup</tt> to install dependencies.
* Run <tt>bin/rake appraisal spec</tt> to run the tests.
* Run <tt>bin/rake rubocop</tt> to run the linter.
* Run <tt>bin/console</tt> for an interactive prompt that will allow you to experiment.

== Contributing

Bug reports and pull requests are welcome on {GitHub}[https://github.com/benmelz/omniauth-strategies-passthrough].

== License

The gem is available as open source under the terms of the {MIT License}[https://opensource.org/licenses/MIT].
